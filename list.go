// auto-generated
// Code generated by '$ fyne bundle'. DO NOT EDIT.

package main

import "fyne.io/fyne/v2"

var resourceListHtml = &fyne.StaticResource{
	StaticName: "list.html",
	StaticContent: []byte(
		"\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\">\n    <title>云文件管理器</title>\n    <link href=\"https://cdn.bootcdn.net/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <link href=\"https://cdn.bootcdn.net/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n    <style>\n        /* 保持之前提供的样式不变 */\n        :root {\n            --primary-color: #4a90e2;\n            --hover-bg: #f0f4f8;\n        }\n\n        body {\n            background: #f8fafc;\n        }\n\n        .file-list {\n            background: white;\n            border-radius: 12px;\n            padding: 20px;\n            max-width: 800px;\n            margin: 20px auto;\n            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n            border: 1px solid #e2e8f0;\n        }\n\n        .list-item {\n            padding: 12px 16px;\n            border-radius: 8px;\n            transition: all 0.2s;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            margin: 4px 0;\n            \n        }\n\n        .list-item:hover {\n            background: var(--hover-bg);\n            transform: translateX(4px);\n        }\n\n        .item-content {\n            display: flex;\n            align-items: center;\n            gap: 14px;\n            flex-grow: 1;\n        }\n\n        .folder-icon {\n            color: #f59e0b;\n            font-size: 1.2rem;\n        }\n\n        .file-icon {\n            color: #64748b;\n            font-size: 1.1rem;\n        }\n\n        .download-btn {\n            opacity: 1;\n            transition: all 0.2s;\n            border: none;\n            background: rgba(74, 144, 226, 0.1);\n        }\n\n        /* .list-item:hover .download-btn {\n            opacity: 1;\n            background: var(--primary-color);\n            color: white;\n        } */\n\n\n        .list-item .item-content {\n            max-width: 80%;\n        }\n        .list-item .item-content span {\n            max-width: 60%;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n\n        .path-nav {\n            display: flex;\n            gap: 8px;\n            align-items: center;\n            margin-bottom: 20px;\n            flex-wrap: wrap;\n        }\n\n        .nav-btn {\n            cursor: pointer;\n            padding: 6px 12px;\n            border-radius: 6px;\n            transition: all 0.2s;\n            background: white;\n            border: 1px solid #e2e8f0;\n            display: flex;\n            align-items: center;\n            gap: 6px;\n            font-size: 0.9rem;\n        }\n\n        .nav-btn:hover {\n            background: var(--hover-bg);\n            border-color: var(--primary-color);\n        }\n\n        .nav-separator {\n            color: #cbd5e1;\n            font-size: 0.8rem;\n        }\n\n        h1 {\n            color: #1e293b;\n            font-weight: 600;\n            margin: 2rem 0;\n            font-size: 2.25rem;\n        }\n\n        .upload-btn {\n            background: var(--primary-color);\n            color: white;\n            padding: 8px 16px;\n            border-radius: 8px;\n            align-items: center;\n            gap: 8px;\n            transition: all 0.2s;\n            text-decoration: none;\n            bottom:20px;\n            width: 80px;\n            height: 80px;\n            border-radius: 40px;\n            position: fixed;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            font-size: 16px;\n            right: 20px;\n            box-shadow: #999 0px 0px 10px;\n        }\n\n        .upload-btn:hover {\n            background: #357abd;\n            color: white;\n        }\n        /* 新增微信提示样式 */\n        .wechat-tip {\n            display: none;\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            background: #ff4d4f;\n            color: white;\n            padding: 12px 20px;\n            align-items: center;\n            justify-content: center;\n            gap: 10px;\n            z-index: 9999;\n            box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n            font-size: 0.9rem;\n        }\n\n        .wechat-tip i {\n            font-size: 1.1rem;\n        }\n\n        @media (max-width: 480px) {\n            .wechat-tip {\n                flex-wrap: wrap;\n                text-align: center;\n                padding: 8px 10px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div id=\"wechat-tip\" class=\"wechat-tip\">\n        <i class=\"fas fa-exclamation-triangle\"></i>\n        请点击右上角 <i class=\"fas fa-ellipsis-h\"></i> 选择在浏览器中打开\n    </div>\n    <div class=\"container\">\n        <!-- <h1 class=\"my-4 text-center\">全部共享文件</h1> -->\n        <div class=\"d-flex justify-content-between align-items-center mb-4\">\n            <div class=\"d-flex align-items-center gap-3\">\n                <button id=\"back-btn\" class=\"btn btn-outline-secondary btn-sm\" style=\"display: none;\">\n                    <i class=\"fas fa-arrow-left\"></i> 返回\n                </button>\n                <!-- <div id=\"path-nav\" class=\"path-nav\"></div> -->\n            </div>\n            \n        </div>\n        <div id=\"file-list\" class=\"file-list\"></div>\n        <div id=\"file-list-empty\">没有共享任何文件</div>\n        <a id=\"upload-btn\" href=\"upload\" class=\"upload-btn\">\n            <i class=\"fas fa-cloud-upload-alt\"></i>\n            上传\n        </a>\n    </div>\n    <script>\n        // 微信环境检测\n        function isWechatBrowser() {\n            const ua = navigator.userAgent.toLowerCase();\n            return ua.indexOf('micromessenger') !== -1;\n        }\n\n        // 显示/隐藏微信提示\n        function checkBrowser() {\n            const tip = document.getElementById('wechat-tip');\n            tip.style.display = isWechatBrowser() ? 'flex' : 'none';\n        }\n\n        // 在页面加载时检查\n        window.addEventListener('DOMContentLoaded', () => {\n            checkBrowser();\n            // 原有初始化代码...\n        });\n    </script>\n    <script>\n        let currentPath = '';\n        let historyStack = [];\n\n        // 获取文件列表\n        async function fetchFiles(path = '') {\n            try {\n                const response = await fetch(`/api/files?path=${encodeURIComponent(path)}`);\n                if (!response.ok) throw new Error('请求失败');\n                return await response.json();\n            } catch (error) {\n                console.error('获取文件数据失败:', error);\n                return { list: [] };\n            }\n        }\n\n        // 渲染路径导航\n        function renderPathNav() {\n            const nav = document.getElementById('path-nav');\n            nav.innerHTML = '';\n            \n            const parts = currentPath.split('/').filter(p => p);\n            let accumulatedPath = '';\n            \n            // 根目录\n            const rootItem = document.createElement('div');\n            rootItem.className = 'nav-btn';\n            rootItem.innerHTML = '<i class=\"fas fa-home\"></i>';\n            rootItem.onclick = () => loadFiles('');\n            nav.appendChild(rootItem);\n\n            // 路径部分\n            parts.forEach((part, index) => {\n                accumulatedPath += `${part}/`;\n                \n                const separator = document.createElement('div');\n                separator.className = 'nav-separator';\n                separator.innerHTML = '<i class=\"fas fa-chevron-right\"></i>';\n                nav.appendChild(separator);\n\n                const partItem = document.createElement('div');\n                partItem.className = 'nav-btn';\n                partItem.textContent = part;\n                partItem.onclick = () => loadFiles(accumulatedPath.slice(0, -1));\n                nav.appendChild(partItem);\n            });\n\n            // 更新上传按钮链接\n            const uploadBtn = document.getElementById('upload-btn');\n            uploadBtn.href = `/upload?path=${encodeURIComponent(currentPath)}`;\n        }\n\n        // 加载文件列表\n        async function loadFiles(path) {\n            if (path !== currentPath) {\n                historyStack.push(currentPath);\n            }\n            currentPath = path;\n            \n            document.getElementById('back-btn').style.display = \n                historyStack.length > 0 ? 'block' : 'none';\n\n            const files = await fetchFiles(path);\n            if (files.list.length == 0) {\n                document.getElementById(\"file-list\").style.display = \"none\"\n                document.getElementById(\"file-list-empty\").style.display = \"block\"\n            }else{\n                document.getElementById(\"file-list\").style.display = \"block\"\n                document.getElementById(\"file-list-empty\").style.display = \"none\"\n            }\n            renderFiles(files.list);\n            renderPathNav();\n        }\n\n        // 返回上级\n        function goBack() {\n            if (historyStack.length > 0) {\n                const prevPath = historyStack.pop();\n                currentPath = prevPath;\n                loadFiles(currentPath);\n            }\n        }\n\n        // 渲染文件列表\n        function renderFiles(items) {\n            const container = document.getElementById('file-list');\n            container.innerHTML = '';\n\n            if (items.length === 0) {\n                container.innerHTML = '<div class=\"text-center text-muted py-4\">该目录为空</div>';\n                return;\n            }\n\n            items.forEach(item => {\n                const div = document.createElement('div');\n                div.className = 'list-item';\n\n                const content = document.createElement('div');\n                content.className = 'item-content';\n                \n                const icon = document.createElement('i');\n                icon.className = item.type === 'folder' \n                    ? 'fas fa-folder folder-icon' \n                    : 'fas fa-file file-icon';\n\n                const name = document.createElement('span');\n                name.textContent = item.name;\n\n                content.append(icon, name);\n                div.append(content);\n\n                if (item.type === 'file') {\n                    var nPath = currentPath+\"/\"+item.name\n                    \n                    if (nPath.startsWith(\"/\")) {\n                        nPath = nPath.substring(1, nPath.length)\n                    }\n                    const downloadBtn = document.createElement('button');\n                    downloadBtn.className = 'download-btn btn btn-sm';\n                    downloadBtn.innerHTML = '<i class=\"fas fa-download\"></i>';\n                    downloadBtn.onclick = (e) => {\n                        e.stopPropagation();\n                        window.location.href = `/download?path=${encodeURIComponent(nPath)}`;\n                    };\n                    div.append(downloadBtn);\n                }\n\n                if (item.type === 'folder') {\n                    div.onclick = () => {\n                        const newPath = currentPath \n                            ? `${currentPath}/${item.name}` \n                            : item.name;\n                        loadFiles(newPath);\n                    };\n                }\n\n                container.appendChild(div);\n            });\n        }\n\n        // 初始化\n        document.getElementById('back-btn').addEventListener('click', goBack);\n        loadFiles('');\n    </script>\n</body>\n</html>"),
}
